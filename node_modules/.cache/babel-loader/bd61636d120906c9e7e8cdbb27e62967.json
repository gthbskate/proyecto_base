{"ast":null,"code":"var _jsxFileName = \"/home/front-end/Documents/curso_front_end/proyecto_base/src/components/initialPage/InitialPage.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikControl from '../../library/formikControls/FormikControls';\nimport { initialAction } from '../../redux/initialDuck';\n\nfunction InitialPage() {\n  const dispatch = useDispatch();\n  const infoData = useSelector(store => store.initialConfig.array);\n  console.log('infoData: ', infoData);\n  const dropdownOption = [{\n    key: 'Select an option',\n    value: ''\n  }, {\n    key: 'Option 1',\n    value: 'option1'\n  }, {\n    key: 'Option 2',\n    value: 'option2'\n  }];\n  const radioOptions = [{\n    key: 'Option 1',\n    value: 'rOption1'\n  }, {\n    key: 'Option 2',\n    value: 'rOption2'\n  }];\n  const checkboxOptions = [{\n    key: 'Option 1',\n    value: 'cOption1'\n  }, {\n    key: 'Option 2',\n    value: 'cOption2'\n  }];\n  const initialValues = {\n    email: '',\n    description: '',\n    selectOption: '',\n    radioOption: '',\n    checkboxOption: [],\n    birthDate: null\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required!'),\n    desciption: Yup.string().required('Required!'),\n    selectOption: Yup.string().required('Required!'),\n    radioOption: Yup.string().required('Required'),\n    checkboxOption: Yup.array().required('Required!'),\n    birthDate: Yup.date().required('Required!').nullable()\n  });\n\n  const onSubmit = values => {\n    console.log('Form data: ', values);\n    console.log('Saved data: ', JSON.pase(JSON.stringify(values)));\n    dispatch(initialAction());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Hola desde p\\xE1gina inicial\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, formik => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"textarea\",\n    label: \"Description\",\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"select\",\n    label: \"Select a topic\",\n    name: \"SelectOption\",\n    options: dropdownOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"radio\",\n    label: \"Radio topic\",\n    name: \"radioOption\",\n    options: radioOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"checkbox\",\n    label: \"Checkbox topic\",\n    name: \"checkboxOption\",\n    options: checkboxOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormikControl, {\n    control: \"date\",\n    label: \"Pick a date\",\n    name: \"birthDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, infoData.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, item.name))));\n}\n\nexport default InitialPage;","map":{"version":3,"sources":["/home/front-end/Documents/curso_front_end/proyecto_base/src/components/initialPage/InitialPage.jsx"],"names":["React","useDispatch","useSelector","Formik","Form","Yup","FormikControl","initialAction","InitialPage","dispatch","infoData","store","initialConfig","array","console","log","dropdownOption","key","value","radioOptions","checkboxOptions","initialValues","email","description","selectOption","radioOption","checkboxOption","birthDate","validationSchema","object","string","required","desciption","date","nullable","onSubmit","values","JSON","pase","stringify","formik","map","item","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport FormikControl from '../../library/formikControls/FormikControls'\n\nimport { initialAction } from '../../redux/initialDuck'\n\nfunction InitialPage() {\n\n    const dispatch = useDispatch()\n    const infoData = useSelector(store => store.initialConfig.array)\n    console.log('infoData: ',infoData)\n\n    const dropdownOption = [\n        { key: 'Select an option', value: ''},\n        { key:'Option 1', value:'option1'},\n        { key:'Option 2', value:'option2'}\n    ]\n\n    const radioOptions = [\n        { key:'Option 1', value:'rOption1'},\n        { key:'Option 2', value:'rOption2'}\n    ]\n\n    const checkboxOptions = [\n        { key:'Option 1', value:'cOption1'},\n        { key:'Option 2', value:'cOption2'}\n    ]\n\n    const initialValues = {\n        email: '',\n        description: '',\n        selectOption: '',\n        radioOption: '',\n        checkboxOption: [],\n        birthDate: null\n    }\n\n    const validationSchema = Yup.object({\n        email: Yup.string().email('Invalid email format').required('Required!'),\n        desciption: Yup.string().required('Required!'),\n        selectOption: Yup.string().required('Required!'),\n        radioOption: Yup.string().required('Required'),\n        checkboxOption: Yup.array().required('Required!'),\n        birthDate: Yup.date().required('Required!').nullable()\n    })\n\n    const onSubmit = values => {\n        console.log('Form data: ',values)\n        console.log('Saved data: ', JSON.pase(JSON.stringify(values)))\n        dispatch(initialAction())\n    }\n\n    return (\n        <div>\n            <h1>Hola desde página inicial</h1>\n\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n                enableReinitialize\n            >\n                {formik => (\n                    <Form>\n                        <FormikControl \n                            control='input'\n                            type='email'\n                            label='Email'\n                            name='email'\n                        />\n                        <FormikControl \n                            control='textarea'\n                            label='Description'\n                            name='description'\n                        />\n                        <FormikControl \n                            control='select'\n                            label='Select a topic'\n                            name='SelectOption'\n                            options={dropdownOption}\n                        />\n                        <FormikControl \n                            control='radio'\n                            label='Radio topic'\n                            name='radioOption'\n                            options={radioOptions}\n                        />\n                        <FormikControl \n                            control='checkbox'\n                            label='Checkbox topic'\n                            name='checkboxOption'\n                            options={checkboxOptions}\n                        />\n                        <FormikControl \n                            control='date'\n                            label='Pick a date'\n                            name='birthDate'\n                        />\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n            \n            <ul>\n                {\n                    infoData.map(item => (\n                        <li key={item.name}>{item.name}</li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default InitialPage\n"]},"metadata":{},"sourceType":"module"}